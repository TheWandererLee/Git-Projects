<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>11, 5</value>
  </metadata>
  <metadata name="timerAfterSave.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 5</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JzIqLTYoLzchKzIWIysIExoFCRAnMT5ZcIVpiqFde5JGYHUlPVNLb4hLb4dKbodIa4NGaH1IaH1Jan9K
        a4BMbIFMbIBKaX1HZHdGX29GW2hHW2ZJXGdLX2ZPY2pRZW1JW2RMXmdJWWQ6SFUsOEEjLjQcIysZHyUg
        KC4jLjMcJSsbIykZICUSFBsODRUaGyMuMjkzPEMgLDQMFyAABQ0FCQ4kLjdMYW9jgpdee5BTbYBRan5K
        Y3lMcYhLcYZNboVKan5GY3VEXWtEW2RDWF9CVFtAUVdAUFZCUVZDUFNCT1FBTlFBTlFBT1NBVFhEWWBK
        X2hWbHhed4ZVcIJFXG47T142R1UsOUMdJy4WHCEVHSEZIygdJywfJy4iLDMwPUVBT1lDVGAwQU4bKzkT
        HiolLjlLXmxgfI5hgJJZdYdXb4BbdIVhfI9KZnZJZXRLYnJHWmdAUFg9SEo9RUE8QT08Pjs7PTo+Q0BF
        TUtHUlRGVltHWF9FVl5BU1tAVWBFXWlJYXBNZXRSbX5VdIhVc4lUcIVTb4NOaXpBWGk6Tlw9UVw9UVxC
        VmNKXmtNZXFQaHZVa3pWbXxTa3tNZXVMY3RUan1deIpeeItbdIZddYdieYplfI1phJVCUlxBUVhCTVU/
        Rkw7QkA8Qj0/REJAR0hCS05FUlZJW2NNYm5OZ3VTa3dhaGxRa3pPaHtQZ31OaHxMZnpKYnVLZHZQa35V
        coVWdIhYdolZeo1ZeY1ZdoladIZcbXldbXlfbnlkaGtmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZBUVtBUVhATlY/S1JATlJFVlxLX2tMZHNMaHhRboBTcoZfeIqBhotlZ2hmZmZi
        Z2tWb4JXcIdTbIBSa35SanxQaHpRaHlSanlQaXhOaHZOaHhQaXdhcXpfbHZjaGxxcnJmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZIYHBKYnNIYnJHYXFIYXRLZ3xQboNR
        b4RPbYFxWWrXHSGIeXlmZmZmZmZmZmZmZmZiZmlSa3lRa3lSanZSaHVPZXBPZHFSZ3VRZnRLYW90Q01y
        P0aSVlnnGBj/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AADUNDSp
        aWlKZXlMZ3xKZXtHYXdGXnVGXnNIYXNKYnNsT132Bwj/AADlFRWWhoZ5eXlmZmZmZmZmZmZiZ2lSaXVM
        Ym5MX2lLXGRJW2ZLX21NYXBJXmuhLDLFGx7/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/
        AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAD/AAD/AAD/AAD/
        AADsHByfj495eXlmZmZmZmZmZmZmZmYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAD/AAD/AAD/
        AACpOTmMTEyMTEyMTEy9LCz/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAAAAAAAAAAAAAAA
        AAAAAAAAAAD/AAD/AAD/AAD5BAT/AAD/AAD/AADsHByfj49vb29mZmZmZmZmZmZmZmYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/AAD/AAD/AAD/AACMTExmZmZmZmZmZmZmZmYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2dnZ8fHxtbW3GJib/AAD/AAD/AADZOTmW
        lpZvb29mZmZmZmZmZmZmZmYAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAD/AAD/AAD/AACMTExmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8ZGS7RkaO
        TU2MTExmZmZmZmbyCAj/AAD/AAD/AADZOTmWlpZvb29mZmZmZmZmZmZmZmYAAAAAAAAAAAAAAAAAAAAA
        AAD/AAD/AAD/AAD/AACMTExmZmZmZmZsbGxzc3Nzc3Nzc3NmZmZmZmYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAD/AADaNzfZNjb/AAD/AACMTExmZmZmZmb/AAD/AAD/AAD/AAD/AADZOTmWlpZvb29m
        ZmZmZmZmZmZmZmYAAAAAAAAAAAAAAAAAAAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AACZmZmZmZkA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAD+AQH/AAD/AAD/AACgQEBmZmZmZmYAAAAA
        AAD/AAD/AAD/AAD/AAD/AADZOTmWlpZpaWlmZmZmZmZmZmZmZmYAAAAAAAAAAAAAAAD/AAD/AAD/AADz
        ExPZGRnZGRnZGRmvNjb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAD+AgL/
        AAD/AAD/AACpOTlmZmZmZmYAAAAAAAAAAAAAAAD/AAD/AAD/AAD/AAD/AADZOTmPj49paWlmZmZmZmZm
        ZmZmZmYAAAAAAAAAAAD/AAD/AAD/AADHR0dmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZtbW1qamr/AAD6BQX/AAD/AAD/AADGJiZmZmZmZmZmZmZmZmZmZmYAAAAAAAAAAAD/AAD/
        AAD/AAD/AAD/AADZOTmPj49paWlmZmZmZmZmZmZmZmZmZmZmZmb/AAD/AAD/AACzMzNmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmapOTmMTExmZmZmZmb0EBD/AAD/AAD/AADUJCRzc3OMjIyZ
        mZmZmZkAAAAAAAAAAAAAAAAAAAAAAAD/AAD/AAD/AAD/AAD/AADZOTmPj49zc3Nvb29tbW2FhYVmZmam
        YmL/AAD/AAD/AADvDw/fHx/fHx/fHx/fHx/fHx/fHx/fHx/iIiLmJibmJibmJibmJib/AACzc3OZmZmZ
        mZn/AAD/AAD/AAD/AAD3DQ3/AAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAD/AAD/AAD/
        AAD/AADlJyfTQkLrHx+ZmZnrHx//AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/
        AAD/AAD/AAD/AAD/AAD/AAD/AAAAAAAAAAD/AAD/AAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD/AAD/AAD/AAD/AAD/AAD/AAD/AAAAAAD/AAD/AAD/AAD/AAD/AAD/AAD/
        AAD/AAD/AAD/AAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD+AB/wAAAAAPwAD/AH/gAA/gAH8AB/AAD4AAPwAH8AAOAAAfAB/wAAwDAA8Af/AACAeABwAAAAAAAc
        AAAAAAAAAH4AAAAAAAAB/wAAAAMAAB//gIAP/wAA////////AAA=
</value>
  </data>
</root>